# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  before_all do
  end

  desc "Create local.properties file and do clean"
  lane :init_env do
    f = File.open("../local.properties", "w")
    f.puts ENV["ANDROID_SDK_DIR"]
    f.close
    gradle(task: "clean")
  end

  desc "Build APK & Send To Slack"
  lane :build_release_apk do
    #build(flavor: "mimi", build_type: "Dev_Release")
    build(flavor: "mimi", build_type: "Sit_Release")
    #build(flavor: "mimi", build_type: "Prod_Release")
  end

  desc "Building APK"
  private_lane :build do |options|
    begin
      gradle(
        task: "assemble",
        build_type: options[:build_type],
        flavor: options[:flavor],
        properties: {
          "android.injected.signing.store.file" => ENV["KEYSTORE_PATH"],
          "android.injected.signing.store.password" => ENV["KEY_PASSWORD"],
          "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
          "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
        }
      )
      file_path = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]
      file_name = file_path.gsub(/\/.*\//,"")
      sh "echo Uploading " + file_name + " to Slack"
      sh "curl https://slack.com/api/files.upload -H \"Authorization: Bearer xoxp-437838910263-806188384230-1509855476614-bc5b3bfb2cb4f2ecfe7615d42eba51ef\" -F channels=\"C01F2TZQC4B\" -F title=\"" + file_name + "\" -F filename=\"" + file_name + "\" -F file=@" + file_path
      on_success()
    rescue => exception
      on_error(exception)
    end
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  def on_success()
    slack(
        message: "Build Successful!",
        success: true,
        slack_url: ENV["SLACK_HOOK_URL"]
    )
  end

  def on_error(exception)
    slack(
        message: "Build Failed!",
        success: false,
        slack_url: ENV["SLACK_HOOK_URL"],
        attachment_properties: {
            fields: [
                {
                    title: "Error message",
                    value: exception
                }
            ]
        }
    )
  end

end

